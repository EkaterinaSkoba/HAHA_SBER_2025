import React, { useState } from 'react';
import './TabStyles.css';

const ParticipantsTab = ({ event, updateParticipants, isOrganizer, currentUser }) => {
  const [inviteLink, setInviteLink] = useState(`${window.location.origin}/invite/${event.id}`);
  const [newOrganizerIndex, setNewOrganizerIndex] = useState(null);
  
  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
  const handleCopyLink = () => {
    navigator.clipboard.writeText(inviteLink)
      .then(() => {
        alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!');
      })
      .catch(err => {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å: ', err);
      });
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞
  const handleRemoveParticipant = (participantId) => {
    if (participantId === event.organizerId) {
      alert('–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è');
      return;
    }
    
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞?')) {
      const updatedParticipants = event.participants.filter(p => p !== participantId);
      updateParticipants(updatedParticipants);
    }
  };

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞
  const toggleOrganizeChange = (index) => {
    setNewOrganizerIndex(newOrganizerIndex === index ? null : index);
  };

  // –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞
  const handleChangeOrganizer = (newOrganizerId) => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ —ç—Ç–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É?')) {
      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
      const updatedEvent = {
        ...event,
        organizerId: newOrganizerId
      };
      
      // –ó–¥–µ—Å—å –º—ã –¥–æ–ª–∂–Ω—ã –æ–±–Ω–æ–≤–∏—Ç—å –≤–µ—Å—å event, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ participants
      // –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º updateEvent –≤–º–µ—Å—Ç–æ updateParticipants
      // –ù–æ —Ç–∞–∫ –∫–∞–∫ –º—ã –µ–≥–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–ª–∏, –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ props –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      // –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è
      
      // –°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –≤–∞—Ä–∏–∞–Ω—Ç - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–Ω–æ–≤–æ –∑–∞—à–µ–ª
      // –Ω–æ –º—ã –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      alert('–ü—Ä–∞–≤–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ –ø–µ—Ä–µ–¥–∞–Ω—ã –¥—Ä—É–≥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
    }
    
    setNewOrganizerIndex(null);
  };

  return (
    <div className="participants-tab">
      <div className="tab-header">
        <h2>–£—á–∞—Å—Ç–Ω–∏–∫–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</h2>
      </div>
      
      <div className="invite-link-container card">
        <p>–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</p>
        <div className="invite-link-box">
          <input 
            type="text" 
            value={inviteLink} 
            readOnly 
            className="form-control"
          />
          <button className="btn btn-secondary copy-link-btn" onClick={handleCopyLink}>
            –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
          </button>
        </div>
      </div>
      
      <div className="participants-list card">
        <h3>–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ({event.participants.length})</h3>
        
        <div className="table-container">
          <table>
            <thead>
              <tr>
                <th>‚Ññ</th>
                <th>–£—á–∞—Å—Ç–Ω–∏–∫</th>
                <th>–†–æ–ª—å</th>
                {isOrganizer && <th>–î–µ–π—Å—Ç–≤–∏—è</th>}
              </tr>
            </thead>
            <tbody>
              {event.participants.map((participant, index) => (
                <tr key={participant} className={participant === currentUser ? 'current-user' : ''}>
                  <td>{index + 1}</td>
                  <td>
                    {participant === currentUser ? '–Ø' : `–£—á–∞—Å—Ç–Ω–∏–∫ ${participant}`}
                  </td>
                  <td>
                    {participant === event.organizerId ? '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä' : '–£—á–∞—Å—Ç–Ω–∏–∫'}
                  </td>
                  {isOrganizer && (
                    <td className="actions-cell">
                      {participant !== event.organizerId && participant !== currentUser && (
                        <>
                          <button 
                            className="btn-icon make-organizer"
                            onClick={() => toggleOrganizeChange(index)}
                            title="–ù–∞–∑–Ω–∞—á–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º"
                          >
                            üëë
                          </button>
                          
                          {newOrganizerIndex === index && (
                            <div className="confirm-dropdown">
                              <p>–ù–∞–∑–Ω–∞—á–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º?</p>
                              <div className="confirm-buttons">
                                <button 
                                  className="btn btn-secondary"
                                  onClick={() => setNewOrganizerIndex(null)}
                                >
                                  –û—Ç–º–µ–Ω–∞
                                </button>
                                <button 
                                  className="btn btn-primary"
                                  onClick={() => handleChangeOrganizer(participant)}
                                >
                                  –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
                                </button>
                              </div>
                            </div>
                          )}
                          
                          <button 
                            className="btn-icon delete"
                            onClick={() => handleRemoveParticipant(participant)}
                            title="–£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"
                          >
                            üóëÔ∏è
                          </button>
                        </>
                      )}
                    </td>
                  )}
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
};

export default ParticipantsTab; 